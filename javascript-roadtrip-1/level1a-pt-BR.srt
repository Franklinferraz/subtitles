1
00:00:00,000 --> 00:00:03,120
Olá a todos, e bem-vindos ao
a viagem ao "JavaScript."

2
00:00:03,120 --> 00:00:04,820
se você já navegou na
internet antes

3
00:00:04,820 --> 00:00:05,860
- e quem não o fez -

4
00:00:05,860 --> 00:00:08,480
é possível que você tenha executado
milhares, senão milhões, de

5
00:00:08,480 --> 00:00:10,660
linhas de código JavaScript.

6
00:00:10,660 --> 00:00:13,270
Agora, embora o JavaScript seja
primariamente desenvolvido para

7
00:00:13,270 --> 00:00:16,400
páginas interativas, neste
tutorial,

8
00:00:16,400 --> 00:00:18,980
inicialmente, focaremos na
construção dos blocos da

9
00:00:18,980 --> 00:00:22,240
linguagem JavaScript propriamente dita,
para mais tarde, você seja capaz de

10
00:00:22,240 --> 00:00:24,820
utilizar com os mais avançados
frameworks como jQuery.

11
00:00:24,820 --> 00:00:26,730
Agora nesta primeira aula de
sua "viagem",  vamos

12
00:00:26,730 --> 00:00:28,790
olhar para os blocos de
construção fundamentais da

13
00:00:28,790 --> 00:00:31,880
Linguagem JavaScript, incluindo
como manipular valores com

14
00:00:31,880 --> 00:00:35,180
operadores, bem como para
criar e armazenar esses valores

15
00:00:35,180 --> 00:00:39,360
dentro de variáveis, e então como
encontrar, criar e rodar

16
00:00:39,360 --> 00:00:42,250
arquivos fontes do JavaScript
dentro do código HTML.

17
00:00:42,250 --> 00:00:43,910
E com isso, vamos lá!

18
00:00:43,910 --> 00:00:45,490
É hora de começar sua
jornada na

19
00:00:45,490 --> 00:00:46,790
"viagem" JavaScript.

20
00:00:46,790 --> 00:00:47,090
[cantando]

21
00:00:47,090 --> 00:00:50,740
Do labirinto dos loops para
o vale das variáveis, veremos

22
00:00:50,740 --> 00:00:52,140
os primeiros penhascos de valores

23
00:00:52,140 --> 00:00:53,690
do JavaScript até
sua rua.

24
00:00:53,690 --> 00:00:57,010
penhascos embutidos, cachoeiras de arquivos,
array, arquipélago

25
00:00:57,010 --> 00:00:59,190
Declarações em um deserto,
onde você descobrirá

26
00:00:59,190 --> 00:01:00,190
quão longe você irá

27
00:01:00,190 --> 00:01:01,010
Aprenda o programa.

28
00:01:01,010 --> 00:01:01,680
Pegue uma carona.

29
00:01:01,680 --> 00:01:02,550
Compre um bilhete.

30
00:01:02,550 --> 00:01:03,640
Entre.

31
00:01:03,640 --> 00:01:05,424
Todos a bordo, você está
na estação para

32
00:01:05,424 --> 00:01:06,580
incrementar sua educação

33
00:01:06,580 --> 00:01:09,350
Boa viagem e bom mergulho! No
entanto de algumas funções 

34
00:01:09,350 --> 00:01:14,210
você não será poupado aqui, na...
Viagem ao "JavaScript".

35
00:01:20,730 --> 00:01:21,380
Ei, viajantes.

36
00:01:21,380 --> 00:01:22,680
Bem-vindos ao nível 1

37
00:01:22,680 --> 00:01:24,260
- Os Penhascos de Valores -

38
00:01:24,260 --> 00:01:26,180
Prepare-se para aprender
sobre números,

39
00:01:26,180 --> 00:01:27,550
operadores e strings.

40
00:01:30,710 --> 00:01:33,030
Há dois simbolos que temos
que nos familiarizar

41
00:01:33,030 --> 00:01:34,910
a medida que avançamos
nessa viagem.

42
00:01:34,910 --> 00:01:38,100
O primeiro é o ">" maior que
símbolo que representa o

43
00:01:38,100 --> 00:01:39,300
prompt do JavaScript.

44
00:01:39,300 --> 00:01:42,650
Aqui, nós colocaremos o código
que efetivamente será inserido

45
00:01:42,650 --> 00:01:44,080
no console.

46
00:01:44,080 --> 00:01:46,230
A seta que segue
que é o que recebe

47
00:01:46,230 --> 00:01:48,430
retornado do código

48
00:01:48,430 --> 00:01:49,610
A linguagem JavaScript

49
00:01:49,610 --> 00:01:51,880
reconhece automaticamente números.

50
00:01:51,880 --> 00:01:55,540
Então você pode ver que se nós
colocarmos um 24 no console,

51
00:01:55,540 --> 00:01:58,270
o console retornará
o mesmo 24 de volta para nós.

52
00:01:58,270 --> 00:02:00,510
O mesmo serve para
valores decimais.

53
00:02:00,510 --> 00:02:06,610
Se nós entramos 3.14, veremos
também um 3.14 de volta.

54
00:02:06,610 --> 00:02:08,919
Vamos tentar um pouco de
matemática no JavaScript.

55
00:02:08,919 --> 00:02:11,995
Há operações comuns que
o console aceitará.

56
00:02:11,995 --> 00:02:14,066
A primeira é a adição.

57
00:02:14,066 --> 00:02:19,920
A segunda é a subtração
A terceira é a multiplicação.

58
00:02:19,920 --> 00:02:21,680
Depois, nós temos a divisão.

59
00:02:21,680 --> 00:02:24,200
E então, nos temos um operador
especial que você verá muito na

60
00:02:24,200 --> 00:02:26,510
programação de computador
chamado de módulo.

61
00:02:26,510 --> 00:02:31,050
Módulo retornará o
resto após a divisão.

62
00:02:31,050 --> 00:02:35,440
Você pode ver aí que se nós
dividirmos 43 por 10, mesmo que

63
00:02:35,440 --> 00:02:38,320
isso aconteça em quatro 
passos, o resto desta

64
00:02:38,320 --> 00:02:42,090
operação é 3.

65
00:02:42,090 --> 00:02:44,310
Prosseguindo com as operações
básicas, o JavaScript

66
00:02:44,310 --> 00:02:47,880
reconhece a ordem padrão das
operações na matemática.

67
00:02:47,880 --> 00:02:50,440
Você talvez lembre deste
acrônimo familiar

68
00:02:50,440 --> 00:02:54,400
Parênteses, Expoentes,
Multiplicação, Divisão,

69
00:02:54,400 --> 00:02:57,720
Adição e Subtração,
ou PEMDAS.

70
00:02:57,720 --> 00:03:00,450
Podemos ver que se nós colocarmos
com uma expressão no

71
00:03:00,450 --> 00:03:04,470
console de código JavaScript, a
primeira coisa que será analisada

72
00:03:04,470 --> 00:03:07,380
é os parenteses que
contém 5 + 7.

73
00:03:07,380 --> 00:03:08,820
Que se tornará um 12

74
00:03:08,820 --> 00:03:14,270
E entao que o 12 pode ser
multiplicado por 3 para conseguir 36.

75
00:03:14,270 --> 00:03:16,640
Aqui esta uma outra longa
expressão.

76
00:03:16,640 --> 00:03:18,990
Nos podemos ver que nos entramos
com os parenteses primeiro.

77
00:03:18,990 --> 00:03:22,440
Os 3 x 4 torna-se 12, e
o resto da expressão

78
00:03:22,440 --> 00:03:23,920
sucede abaixo.

79
00:03:23,920 --> 00:03:27,090
Seguido por isso, nos podemos
atacar o 12 dividido por 2,

80
00:03:27,090 --> 00:03:28,730
que se torna um 6.

81
00:03:28,730 --> 00:03:31,470
E, então nos podemos fazer 
em ordem adição e subtração,

82
00:03:31,470 --> 00:03:34,450
esquerda para direita,
para produzir um 9.

83
00:03:34,450 --> 00:03:36,850
Nesta terceira expressão, nós
vemos alguns números negativos.

84
00:03:36,850 --> 00:03:39,020
O JavaScript
reconhece eles também.

85
00:03:39,020 --> 00:03:41,810
E a primeira coisa que nós vamos
atacar aqui é o 5 negativo

86
00:03:41,810 --> 00:03:44,050
vezes seis dentro
dos parenteses.

87
00:03:44,050 --> 00:03:46,770
Que dará para nós um
30 negativo, e o resto da

88
00:03:46,770 --> 00:03:48,180
expressão segue abaixo.

89
00:03:48,180 --> 00:03:52,340
E se nos avaliarmos o
7 vezes 2 negativo para

90
00:03:52,340 --> 00:03:56,240
chegarmos no 14 negativo, e
então 30 negativo menos

91
00:03:56,240 --> 00:04:00,420
14 negativo resulta
um 16 negativo.

92
00:04:00,420 --> 00:04:03,820
Nesta ultima expressão, nós podemos
ver o módulo operação.

93
00:04:03,820 --> 00:04:06,980
Você pode pensar no módulo como
sendo contido dentro do M

94
00:04:06,980 --> 00:04:09,790
do PEMDAS, em frente com
a multiplicação, por que ela

95
00:04:09,790 --> 00:04:12,870
existe no mesmo nível
hierárquico.

96
00:04:12,870 --> 00:04:15,710
Aqui nesta operação, 
Nós precisamos fazer primeiro

97
00:04:15,710 --> 00:04:17,320
o parenteses mais interno:

98
00:04:17,320 --> 00:04:18,700
que 3 mais 1

99
00:04:18,700 --> 00:04:20,140
resulta em 4.

100
00:04:20,140 --> 00:04:24,920
E então, nós ficariamos com
um 8 módulo de 4

101
00:04:24,920 --> 00:04:26,020
dentro deste último parêntese.

102
00:04:26,020 --> 00:04:30,950
O restante após o 8 é
dividido por 4 e igual a 0.

103
00:04:30,950 --> 00:04:33,670
E então adicionariamos 4 e
0 juntos, e conseguimos 4.

104
00:04:36,950 --> 00:04:39,370
Existem alguns comparadores 
únicos na linguagem JavaScript

105
00:04:39,370 --> 00:04:42,370
que nos permitem
comparar valores.

106
00:04:42,370 --> 00:04:44,910
Quando você usa um comparador, ele
retornará com algo chamado de um

107
00:04:44,910 --> 00:04:48,860
valor Booleano, que é
ou verdadeiro ou falso.

108
00:04:48,860 --> 00:04:51,500
Aqui você pode ver o
comparador ">" maior que

109
00:04:51,500 --> 00:04:53,250
você, provavelmente
conhece ele.

110
00:04:53,250 --> 00:04:56,430
A pergunta, é
6 é maior do que 4?

111
00:04:56,430 --> 00:04:59,590
E o JavaScript responde.
Verdadeiro

112
00:04:59,590 --> 00:05:01,930
Juntamente com ">" maior que,
nós temos o "<" menor que.

113
00:05:01,930 --> 00:05:05,270
E aqui, a pergunta é,
9 é menor do que 5?

114
00:05:05,270 --> 00:05:07,450
E isso é Falso.

115
00:05:07,450 --> 00:05:10,850
Para comparar a igualdade de números
em JavaScript, temos que usar

116
00:05:10,850 --> 00:05:12,580
uma sintaxe especial.

117
00:05:12,580 --> 00:05:14,460
Nós não utilizamos um único
sinal de igual.

118
00:05:14,460 --> 00:05:17,120
Ao invês disso, usamos um
duplo sinal de igual para

119
00:05:17,120 --> 00:05:18,670
retornar um valor booleano.

120
00:05:18,670 --> 00:05:22,750
Esta questão diz que
3 é igual a 4, então

121
00:05:22,750 --> 00:05:24,830
é claro que é falso.

122
00:05:24,830 --> 00:05:27,530
O JavaScript tem uma sintaxe especial
para perguntar se dois

123
00:05:27,530 --> 00:05:29,190
valores não são iguais.

124
00:05:29,190 --> 00:05:32,830
Usamos um ponto de exclamação na
frente de um sinal de igual para perguntar

125
00:05:32,830 --> 00:05:34,840
a não igualdade da questão.

126
00:05:34,840 --> 00:05:38,300
E esta questão específica
diz, 12 não é igual a 4?

127
00:05:38,300 --> 00:05:40,850
O que nos dá um valor de
verdade, porque esses dois

128
00:05:40,850 --> 00:05:42,700
números não são iguais.

129
00:05:42,700 --> 00:05:44,030
Nós também, claro,
temos um maior que

130
00:05:44,030 --> 00:05:46,960
ou igual para sintaxe.

131
00:05:46,960 --> 00:05:50,360
Esta questão pede se 8
é maior que ou igual ao

132
00:05:50,360 --> 00:05:51,530
2 negativo.

133
00:05:51,530 --> 00:05:53,670
Note que o maior que
vem na frente

134
00:05:53,670 --> 00:05:55,390
do sinal de igual.

135
00:05:55,390 --> 00:05:58,270
Esta pergunta retorna com um valor
de verdadeiro, porque 8 é maior

136
00:05:58,270 --> 00:06:00,300
ou igual ao 2 negativo.

137
00:06:00,300 --> 00:06:03,580
Junto com maior ou igual,
temos menor que ou igual.

138
00:06:03,580 --> 00:06:06,810
Esta questão diz que 10 é
menor que ou igual a 10?

139
00:06:06,810 --> 00:06:09,370
e desde que seja igual,
Nós temos um valor verdadeiro.

140
00:06:09,370 --> 00:06:15,000
Traduzido pela comunidade Duolingo
Ajustes e adaptações @fabricio